openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: Person
    description: Api generates data for person
  - name: Member
    description: Api generates data for member
  - name: Role
    description: Api generates data for role
paths:
  /v1/people/males:
    get:
      tags:
        - Person
      operationId: getAllMales
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonDTO'
  /v1/people/males/addresses:
    get:
      tags:
        - Person
      operationId: getAllMalesWithAddress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonDTO'
  /v1/people/save:
    post:
      tags:
        - Person
      operationId: savePerson
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonDTO"
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/PersonDTO"
  /v1/members/save:
    post:
      tags:
        - Member
      operationId: saveMember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MemberDTO"
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/MemberDTO"
components:
  schemas:
    AddressDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        province:
          type: string
        city:
          type: string
        streetName:
          type: string
    PersonDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        dob:
          type: string
          format: date
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressDTO'
        anniversaryDate:
          type: string
          format: date
    RoleDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        roleValue:
          type: string
          enum:
            - PASTOR
            - ELDER
            - DEACON
    MemberDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        membershipDate:
          type: string
        roles:
          type: array
          items:
            $ref: "#/components/schemas/RoleDTO"
        status:
          type: string
          enum:
            - ACTIVE
            - DELETED